swagger: '2.0'
info:
  title: Momentum
  version: '1.0.0'
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:

  # demo
  /demo:
    post:
      x-swagger-router-controller: "demo"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Demo"

  # dashboard
  /dashboard/post/get:
    post:
      x-swagger-router-controller: "dashboard/post/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PostGet"
  /dashboard/post/recommended/list:
    post:
      x-swagger-router-controller: "dashboard/post/recommended/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PostList"
  /dashboard/post/list:
    post:
      x-swagger-router-controller: "dashboard/post/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PostList"
  /dashboard/main:
    post:
      x-swagger-router-controller: "dashboard/main"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /dashboard/category/list:
    post:
      x-swagger-router-controller: "dashboard/category/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CategoryList"
  /dashboard/content/info:
    post:
      x-swagger-router-controller: "dashboard/content/info"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"
  /dashboard/content/temp:
    post:
      x-swagger-router-controller: "dashboard/content/temp"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PostGet"
  /dashboard/content/blacklist:
    post:
      x-swagger-router-controller: "dashboard/content/blacklist"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBlacklist"
  /dashboard/content/stats:
    post:
      x-swagger-router-controller: "dashboard/content/stats"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"
  /dashboard/content/sources:
    post:
      x-swagger-router-controller: "dashboard/content/sources"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"
  /dashboard/content/sources/history:
    post:
      x-swagger-router-controller: "dashboard/content/sources/history"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"

  # auth
  /auth/login:
    post:
      x-swagger-router-controller: "auth/login"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/LoginData"
  /auth/logout:
    post:
      x-swagger-router-controller: "auth/logout"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/register:
    post:
      x-swagger-router-controller: "auth/register"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/LoginData"
  /auth/user:
    post:
      x-swagger-router-controller: "auth/user"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/user/remove:
    post:
      x-swagger-router-controller: "auth/user/remove"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/RemoveUser"
  /auth/user/invite:
    post:
      x-swagger-router-controller: "auth/user/invite"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/InviteUser"
  /auth/user/forgot:
    post:
      x-swagger-router-controller: "auth/user/forgot"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ForgotPassword"
  /auth/user/forgot/setup:
    post:
      x-swagger-router-controller: "auth/user/forgot/setup"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SetupPassword"
  /auth/team:
    post:
      x-swagger-router-controller: "auth/team"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/TeamSwitch"
  /auth/team/list:
    post:
      x-swagger-router-controller: "auth/team/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/team/code:
    post:
      x-swagger-router-controller: "auth/team/code"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/team/user/list:
    post:
      x-swagger-router-controller: "auth/team/user/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/team/user/data/get:
    post:
      x-swagger-router-controller: "auth/team/user/data/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/GetUserData"
  /auth/team/user/data/set:
    post:
      x-swagger-router-controller: "auth/team/user/data/set"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SetUserData"
  /auth/team/user/modify:
    post:
      x-swagger-router-controller: "auth/team/user/modify"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ModifyUser"
  /auth/password/change:
    post:
      x-swagger-router-controller: "auth/password/change"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PasswordChange"
  /auth/user/data/list:
    post:
      x-swagger-router-controller: "auth/user/data/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /auth/user/data/set:
    post:
      x-swagger-router-controller: "auth/user/data/set"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SetUserData"
  /auth/team/property/get:
    post:
      x-swagger-router-controller: "auth/team/property/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/GetUserData"

  /auth/team/payment/get:
    post:
      x-swagger-router-controller: "auth/team/payment/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"

  # alert
  /alert/list:
    post:
      x-swagger-router-controller: "alert/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ListAlert"

  # facebook
  /facebook/token:
    post:
      x-swagger-router-controller: "facebook/token"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookTokenRequest"
  /facebook/token/get:
    post:
      x-swagger-router-controller: "facebook/token/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /facebook/account/list:
    post:
      x-swagger-router-controller: "facebook/account/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /facebook/account/add:
    post:
      x-swagger-router-controller: "facebook/account/add"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAccountSet"
  /facebook/account/remove:
    post:
      x-swagger-router-controller: "facebook/account/remove"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAccountRemove"
  /facebook/account/page/add:
    post:
      x-swagger-router-controller: "facebook/account/page/add"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAccountPageSet"
  /facebook/account/page/remove:
    post:
      x-swagger-router-controller: "facebook/account/page/remove"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAccountPageRemove"
  /facebook/asset/save:
    post:
      x-swagger-router-controller: "facebook/asset/save"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAssetSave"
  /facebook/asset/import:
    post:
      x-swagger-router-controller: "facebook/asset/import"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/FacebookAssetImport"
  /facebook/asset/get:
    post:
      x-swagger-router-controller: "facebook/asset/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /facebook/query/asset/list:
    post:
      x-swagger-router-controller: "facebook/query/asset/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  # promotion
  /promotion/campaign/export:
    post:
      x-swagger-router-controller: "promotion/campaign/export"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CampaignExport"
  /promotion/campaign/list:
    post:
      x-swagger-router-controller: "promotion/campaign/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CampaignList"
  /promotion/audience/list:
    post:
      x-swagger-router-controller: "promotion/audience/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AdAccount"
  /promotion/currency:
    post:
      x-swagger-router-controller: "promotion/currency"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AdAccount"
  /promotion/autoschedule:
    post:
      x-swagger-router-controller: "promotion/autoschedule"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"
  /promotion/ogdata:
    post:
      x-swagger-router-controller: "promotion/ogdata"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ContentBase"
  /promotion/create:
    post:
      x-swagger-router-controller: "promotion/create"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PromotionBase"
  /promotion/post/preview:
    post:
      x-swagger-router-controller: "promotion/post/preview"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PromotionBase"
  /promotion/disable:
    post:
      x-swagger-router-controller: "promotion/disable"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CampaignBase"
  /promotion/clone:
    post:
      x-swagger-router-controller: "promotion/clone"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CampaignBase"
  # admin
  /admin/team/add:
    post:
      x-swagger-router-controller: "admin/team/add"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AddTeamAdmin"
  /admin/team/inactive/get:
    post:
      x-swagger-router-controller: "admin/team/inactive/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /admin/team/inactive/set:
    post:
      x-swagger-router-controller: "admin/team/inactive/set"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SetInactiveAdmin"
  /admin/team/payment/get:
    post:
      x-swagger-router-controller: "admin/team/payment/get"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /admin/team/payment/set:
    post:
      x-swagger-router-controller: "admin/team/payment/set"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SetPaymentAdmin"
  # stripe
  /stripe/pay:
    post:
      x-swagger-router-controller: "stripe/pay"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/PayStripe"
  /stripe/get/billing:
    post:
      x-swagger-router-controller: "stripe/get/billing"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  # rules
  /rule/list:
    post:
      x-swagger-router-controller: "rule/list"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SessionId"
  /rule/save:
    post:
      x-swagger-router-controller: "rule/save"
      responses:
        200:
          description: successful response
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/RuleSave"

definitions:

  # demo
  Demo:
    properties:
      url:
        type: string
      data:
        type: object
      state:
        type: object
    required:
      - url

  # dashboard
  CategoryList:
    properties:
      session_id:
        type: string
      parent:
        type: integer
    required:
      - session_id
  PostGet:
    properties:
      session_id:
        type: string
      url:
        type: string
    required:
      - session_id
      - url
  PostList:
    properties:
      session_id:
        type: string
      limit:
        type: integer
    required:
      - session_id
  ContentBase:
    properties:
      session_id:
        type: string
      content_id:
        type: string
    required:
      - session_id
      - content_id
  ContentBlacklist:
    properties:
      session_id:
        type: string
      url:
        type: string
      blacklist:
        type: boolean
    required:
      - session_id
      - url
      - blacklist

  # auth
  LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  TeamSwitch:
    properties:
      session_id:
        type: string
      team_id:
        type: integer
    required:
      - session_id
      - team_id
  PasswordChange:
    properties:
      session_id:
        type: string
      password:
        type: string
      new_password:
        type: string
    required:
      - session_id
      - password
      - new_password
  SetUserData:
    properties:
      session_id:
        type: string
      key:
        type: string
      value:
        type: string
    required:
      - session_id
      - key
      - value
  GetUserData:
    properties:
      session_id:
        type: string
      key:
        type: string
    required:
      - session_id
      - key
  ModifyUser:
    properties:
      session_id:
        type: string
      user_id:
        type: integer
      state:
        type: integer
    required:
      - session_id
      - user_id
      - state
  RemoveUser:
    properties:
      session_id:
        type: string
      user_id:
        type: integer
    required:
      - session_id
      - user_id
  InviteUser:
    properties:
      session_id:
        type: string
      email:
        type: string
    required:
      - session_id
      - email
  ForgotPassword:
    properties:
      email:
        type: string
    required:
      - email
  SetupPassword:
    properties:
      email:
        type: string
      token:
        type: string
      password:
        type: string
    required:
      - email
      - token
      - password

  # alert
  ListAlert:
    properties:
      session_id:
        type: string
      last:
        type: integer
    required:
      - session_id

  # facebook
  FacebookTokenRequest:
    properties:
      session_id:
        type: string
      access_token:
        type: string
    required:
      - session_id
      - access_token
  FacebookAccountSet:
    properties:
      session_id:
        type: string
      value:
        type: string
      display:
        type: string
    required:
      - session_id
      - value
      - display
  FacebookAccountRemove:
    properties:
      session_id:
        type: string
      value:
        type: string
    required:
      - session_id
      - value
  FacebookAccountPageSet:
    properties:
      session_id:
        type: string
      account:
        type: string
      value:
        type: string
      display:
        type: string
    required:
      - session_id
      - account
      - value
      - display
  FacebookAccountPageRemove:
    properties:
      session_id:
        type: string
      account:
        type: string
      value:
        type: string
    required:
      - session_id
      - account
      - value
  FacebookAssetSave:
    properties:
      session_id:
        type: string
      manual:
        type: object
    required:
      - session_id
  FacebookAssetImport:
    properties:
      session_id:
        type: string
      business_id:
        type: string
    required:
      - session_id
      - business_id

  # promotion
  PromotionBase:
    properties:
      session_id:
        type: string
      content_id:
        type: integer
      settings:
        type: object
    required:
      - session_id
      - content_id
  CampaignExport:
    properties:
      session_id:
        type: string
      content_id:
        type: integer
      year:
        type: integer
      month:
        type: integer
    required:
      - session_id
      - year
      - month
  CampaignList:
    properties:
      session_id:
        type: string
      content_id:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
    required:
      - session_id
  CampaignBase:
    properties:
      session_id:
        type: string
      campaign_id:
        type: integer
    required:
      - session_id
      - campaign_id
  AdAccount:
    properties:
      session_id:
        type: string
      ad_account:
        type: string
    required:
      - session_id
      - ad_account
  # admin
  AddTeamAdmin:
    properties:
      session_id:
        type: string
      email:
        type: string
      team_name:
        type: string
      send_code:
        type: string
      payment_amount:
        type: integer
      partner:
        type: integer
    required:
      - session_id
      - email
      - team_name
  SetInactiveAdmin:
    properties:
      session_id:
        type: string
      status:
        type: integer
    required:
      - session_id
      - status
  SetPaymentAdmin:
    properties:
      session_id:
        type: string
      amount:
        type: integer
    required:
      - session_id
      - amount
  # billing
  PayStripe:
    properties:
      session_id:
        type: string
      info:
        type: object
      token:
        type: string
    required:
      - session_id
      - info
      - token
  # rules
  RuleSave:
    properties:
      session_id:
        type: string
      data:
        type: object
    required:
      - session_id
      - data
  # global
  SessionId:
    properties:
      session_id:
        type: string
    required:
      - session_id

