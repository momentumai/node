var Promise = require('bluebird'),
    bvCrypto = require('@lib/utils/crypto'),
    uuid = require('@lib/utils/uuid'),
    visitor = {};

visitor.decryptHash = function (hash) {
    return new Promise(function (resolve) {
        return resolve(bvCrypto.decryptHash(hash));
    }).then(function (decrypted) {
        if (decrypted && decrypted.id) {
            return decrypted;
        }

        throw 'User not found';
    }).catch(function () {
        return Promise.resolve({
            'id': '0',
            'generation': '0',
            'params': {}
        });
    });
};

visitor.decryptCookie = function (cookie) {
    return new Promise(function (resolve) {
        return resolve(String(bvCrypto.decryptCookie(cookie)));
    }).catch(function () {
        return Promise.resolve(String(uuid.next()));
    });
};

visitor.validate = function (cookie, hash) {
    var decryptedCookie;

    return visitor.decryptCookie(cookie).then(function (data) {
        decryptedCookie = data;

        return visitor.decryptHash(hash);
    }).then(function (decryptedHash) {
        if (decryptedHash.id === decryptedCookie) {
            return Promise.resolve(decryptedCookie);
        }

        return Promise.resolve(String(uuid.next()));
    });
};

module.exports = visitor;
