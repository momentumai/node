var ds = require('@lib/resources/ds'),
    extend = require('extend'),
    catUtils = require('@lib/utils/category'),
    Facebook = require('@lib/utils/facebook'),
    fbCampaign = {};

function validateCampaign (campaign, fb) {
    var url = campaign,
        params = {
            'status': 'ACTIVE'
        };

    return Facebook.post(url, params, fb.token).then(function (resp) {
        if (resp && resp.success) {
            return campaign;
        }

        return '';
    }).catch(function () {
        return '';
    });
}

function getCampaignName (cats) {
    var name = ['Momentum'];

    cats.forEach(function (cat) {
        if (cat !== 'NONE') {
            name.push(decodeURIComponent(cat));
        }
    });

    if (name.length === 1) {
        name.push('Global');
    }

    return name.join(' - ');
}

function createFbCampaign (name, adaccount, fb) {
    var url = adaccount + '/campaigns',
        params = {
            'name': name,
            'objective': 'LINK_CLICKS',
            'status': 'ACTIVE'
        };

    return Facebook.post(url, params, fb.token).then(function (resp) {
        return {'fb': resp, 'params': params};
    });
}

function add (teamId, cats, adaccount, fb) {
    var campaign;

    catUtils.extend(cats);

    return createFbCampaign(
        getCampaignName(cats),
        adaccount,
        fb
    ).then(function (resp) {
        campaign = extend({}, resp, {
            'team_id': teamId,
            'cat1': cats[0],
            'cat2': cats[1],
            'cat3': cats[2],
            'adaccount': adaccount,
        });

        return ds.set('FacebookCampaign', [{
            'data': campaign
        }]);
    }).then(function () {
        return campaign;
    });
}

fbCampaign.addGet = function (teamId, cats, adaccount, fb, pool) {
    catUtils.extend(cats);

    return fbCampaign.get(
        teamId,
        cats,
        adaccount,
        fb,
        pool
    ).then(function (campaignId) {
        if (!campaignId) {
            return add(teamId, cats, adaccount, fb, pool);
        }
        return campaignId;
    });
};

fbCampaign.get = function (teamId, cats, adaccount, fb, pool) {
    catUtils.extend(cats);

    return db.q(q['fb_campaign_get'], {
        'team_id': teamId,
        'adaccount': adaccount,
        'cats': cats
    }, pool).then(function (rows) {
        return rows[0] && rows[0].campaign_id || '';
    }).then(function (campaign) {
        return validateCampaign(campaign, fb);
    });
};

module.exports = fbCampaign;
