var ds = require('@lib/resources/ds'),
    catUtils = require('@lib/utils/category'),
    Facebook = require('@lib/utils/facebook'),
    Promise = require('bluebird'),
    fbCampaign = {};

function validateCampaign (campaign, token) {
    var url = campaign,
        params = {
            'status': 'ACTIVE'
        };

    if (!campaign) {
        return Promise.resolve('');
    }

    return Facebook.post(url, params, token).then(function (resp) {
        if (resp && resp.success) {
            return campaign;
        }

        return '';
    }).catch(function () {
        return '';
    });
}

function getCampaignName (cats) {
    var name = ['Momentum Experiments'];

    cats.forEach(function (cat) {
        if (cat !== 'NONE') {
            name.push(decodeURIComponent(cat));
        }
    });

    if (name.length === 1) {
        name.push('Global');
    }

    return name.join(' - ');
}

function createFbCampaign (name, adaccount, token) {
    var url = adaccount + '/campaigns',
        params = {
            'name': name,
            'objective': 'LINK_CLICKS',
            'status': 'ACTIVE'
        };

    return Facebook.post(url, params, token).then(function (resp) {
        return resp.id;
    });
}

function add (teamId, cats, adaccount, token) {
    var campaign;

    catUtils.extend(cats);

    return createFbCampaign(
        getCampaignName(cats),
        adaccount,
        token
    ).then(function (resp) {
        campaign = {
            'cat1': cats[0],
            'cat2': cats[1],
            'cat3': cats[2],
            'adaccount': adaccount,
            'id': resp
        };

        return ds.set('FacebookCampaign', {
            'data': campaign
        }, teamId);
    }).then(function () {
        return campaign.id;
    });
}

fbCampaign.addGet = function (teamId, cats, adaccount, token) {
    catUtils.extend(cats);

    return fbCampaign.get(teamId, cats, adaccount, token)
    .then(function (campaign) {
        if (!campaign) {
            return add(teamId, cats, adaccount, token);
        }
        return campaign;
    });
};

fbCampaign.get = function (teamId, cats, adaccount, token) {
    catUtils.extend(cats);

    return ds.query('FacebookCampaign', function (query) {
        query.filter('cat1', cats[0]);
        query.filter('cat2', cats[1]);
        query.filter('cat3', cats[2]);
        return query.filter('adaccount', adaccount);
    }, teamId).then(function (items) {
        return items && items[0] && items[0].data || {};
    }).then(function (campaign) {
        return validateCampaign(campaign.id, token);
    });
};

module.exports = fbCampaign;
