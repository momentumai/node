var path = require('path'),
    db = require('@lib/resources/db'),
    sqlUtils = require('@lib/utils/sql'),
    catUtils = require('@lib/utils/category'),
    Facebook = require('@lib/utils/facebook'),
    q = sqlUtils.getQueries(path.join(__dirname, 'sql')),
    fbCampaign = {};

function validateCampaign (campaign, fb) {
    var url = campaign,
        params = {
            'status': 'ACTIVE'
        };

    return Facebook.post(url, params, fb.token).then(function (resp) {
        if (resp && resp.success) {
            return campaign;
        }

        return '';
    }).catch(function () {
        return '';
    });
}

function getCampaignName (teamId, cats, pool) {
    return db.q(q['get_category_names'], {
        'team_id': teamId,
        'cats': cats
    }, pool).then(function (rows) {
        var campaignNames = {},
            name = ['Momentum'];

        rows.forEach(function (row) {
            if (row.name !== 'NONE') {
                campaignNames[String(row.id)] = decodeURIComponent(row.name);
            }
        });

        if (!Object.keys(campaignNames).length) {
            name.push('Global');
            return name.join(' - ');
        }

        cats.forEach(function (cat) {
            if (cat && campaignNames[String(cat)]) {
                name.push(campaignNames[String(cat)]);
            }
        });

        return name.join(' - ');
    });
}

function createFbCampaign (teamId, name, adaccount, fb) {
    var url = adaccount + '/campaigns',
        params = {
            'name': name,
            'objective': 'LINK_CLICKS',
            'status': 'ACTIVE'
        };

    return Facebook.post(url, params, fb.token).then(function (resp) {
        return resp.id;
    });
}

function add (teamId, cats, adaccount, fb, pool) {
    var campaignId;

    catUtils.extend(cats);

    return getCampaignName(teamId, cats, pool).then(function (name) {
        return createFbCampaign(teamId, name, adaccount, fb);
    }).then(function (resp) {
        campaignId = resp;
        return db.q(q['fb_campaign_insert'], {
            'team_id': teamId,
            'cat1': cats[0] || 0,
            'cat2': cats[1] || 0,
            'cat3': cats[2] || 0,
            'adaccount': adaccount,
            'campaign_id': campaignId
        }, pool);
    }).then(function () {
        return campaignId;
    });
}

fbCampaign.addGet = function (teamId, cats, adaccount, fb, pool) {
    catUtils.extend(cats);

    return fbCampaign.get(
        teamId,
        cats,
        adaccount,
        fb,
        pool
    ).then(function (campaignId) {
        if (!campaignId) {
            return add(teamId, cats, adaccount, fb, pool);
        }
        return campaignId;
    });
};

fbCampaign.get = function (teamId, cats, adaccount, fb, pool) {
    catUtils.extend(cats);

    return db.q(q['fb_campaign_get'], {
        'team_id': teamId,
        'adaccount': adaccount,
        'cats': cats
    }, pool).then(function (rows) {
        return rows[0] && rows[0].campaign_id || '';
    }).then(function (campaign) {
        return validateCampaign(campaign, fb);
    });
};

module.exports = fbCampaign;
