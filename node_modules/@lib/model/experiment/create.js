var Promise = require('bluebird'),
    ds = require('@lib/resources/ds'),
    contentInfo = require('@lib/model/content/info'),
    fbCampaign = require('@lib/model/fb/campaign'),
    experimentTestCreate = require('@lib/model/experiment/test/create');

function parseParams (p) {
    var params = {};

    params.team_id = p.team_id || 0;

    params.name_text = p.name_text || '';
    params.audience_id = p.audience_id || '';
    params.adaccount = p.adaccount || '';
    params.page = p.page || '';
    params.budget = Number(p.budget) || 0;
    params.end_time = Number(p.end_time) || 0;
    params.content_id = p.content_id || '';

    params.utm = params.utm || {};
    params.utm.utm_source = p.utm.utm_source || '';
    params.utm.utm_medium = p.utm.utm_medium || '';
    params.utm.utm_campaign = p.utm.utm_campaign || '';

    params.tests = (p.tests || []).map(function (item, index) {
        var testParams = {};

        testParams.description = item.description || '';
        testParams.name = item.name || '';
        testParams.message = item.message || '';
        testParams.image = item.image || '';
        testParams.name_text = [
            '#',
            index + 1,
            ' ',
            params.name_text
        ].join('');
        return testParams;
    });

    return params;
}

function addTest (test, params, token) {
    console.log('test', test);
    return experimentTestCreate({
        'team_id': params.team_id,
        'campaign': params.campaign,
        'adaccount': params.adaccount,
        'page': params.page,
        'audience_id': params.audience_id,
        'budget': Math.floor(params.budget / params.tests.length),
        'end_time': params.end_time,
        'description': test.description,
        'name': test.name,
        'message': test.message,
        'image': test.image,
        'content_url': params.contentInfo.url,
        'content_id': params.contentInfo.id,
        'utm': params.utm,
        'name_text': test.name_text
    }, token);
}

module.exports = function (params, token) {
    params = parseParams(params);

    return contentInfo.get(params.team_id, params.content_id)
    .then(function (contentInfo) {
        params.contentInfo = contentInfo;

        return fbCampaign.addGet({
            'team_id': params.team_id,
            'cats': params.contentInfo.cats,
            'adaccount': params.adaccount,
            'type': 'experiment'
        }, token);
    }).then(function (campaign) {
        params.campaign = campaign;

        return Promise.all(params.tests.map(function (item) {
            return addTest(item, params, token);
        }));
    }).then(function (tests) {
        params.tests = tests;

        return ds.set('Experiment', {
            'data': {
                'cat1': params.contentInfo.cats[0],
                'cat2': params.contentInfo.cats[1],
                'cat3': params.contentInfo.cats[2],
                'content_id': params.contentInfo.id,
                'tests': tests.map(function (item) {
                    return ds.jsonToKey(item.key);
                }),
                'created_at': new Date(),
                'name_text': params.name_text,
                'end_time': new Date(params.end_time * 1000),
                'active': false,
                'click': 0
            }
        }, params.team_id);
    });
};
