var Promise = require('bluebird'),
    ds = require('@lib/resources/ds'),
    uuid = require('uuid'),
    urlUtils = require('@lib/utils/url'),
    audience = require('@lib/model/audience'),
    fbAdset = require('@lib/model/fb/adset'),
    fbAdcreative = require('@lib/model/fb/adcreative'),
    fbAd = require('@lib/model/fb/ad');

function parseParams (p) {
    var params = {};

    params.team_id = p.team_id || 0;
    params.experiment_id = p.experiment_id;
    params.campaign = p.campaign;

    params.adaccount = p.adaccount || '';
    params.page = p.page || '';

    params.audience_id = p.audience_id || '';
    params.budget = Number(p.budget) || 0;
    params.end_time = Number(p.end_time) || 0;

    params.description = p.description || '';
    params.name = p.name || '';
    params.message = p.message || '';
    params.image = p.image || '';

    params.content_url = p.content_url || '';

    params.utm = params.utm || {};
    params.utm.utm_source = p.utm.utm_source || '';
    params.utm.utm_medium = p.utm.utm_medium || '';
    params.utm.utm_campaign = p.utm.utm_campaign || '';

    params.name_text = p.name_text || '';
    params.start_time = new Date().getTime() / 1000;

    params.id = uuid.v4();

    return params;
}

function createFbAdset (params, token) {
    return audience.get(
        params.team_id,
        params.audience_id
    ).then(function (audience) {
        return fbAdset.add(params.campaign, {
            'adaccount': params.adaccount,
            'optimization_goal': 'LINK_CLICKS',
            'budget_type': 'lifetime_budget',
            'budget': params.budget,
            'name_text': params.name_text,
            'end_time': params.end_time,
            'start_time': params.start_time,
            'targeting': audience.data
        }, token);
    });
}

function getLink (params) {
    var link;

    link = urlUtils.addExperimentParams(params.content_url, params.id);
    link = urlUtils.addUTM(link, params.utm);
    return link;
}

function createFbAdcreative (params, token) {
    return fbAdcreative.add({
        'team_id': params.team_id,
        'adaccount': params.adaccount,
        'page': params.page,
        'name': params.name,
        'link': getLink(params),
        'message': params.message,
        'description': params.description,
        'caption': params.caption,
        'image': params.image,
        'name_text': params.name_text
    }, token);
}

function createFbAd (params, token) {
    return fbAd.add(params.adset, params.adcreative, {
        'adaccount': params.adaccount,
        'name': params.name_text
    }, token);
}

module.exports = function (params, token) {
    params = parseParams(params);

    return Promise.join(
        createFbAdset(params, token),
        createFbAdcreative(params, token),
        function (adset, adcreative) {
            params.adset = adset;
            params.adcreative = adcreative;
        }
    ).then(function () {
        return createFbAd(params, token);
    }).then(function (ad) {
        params.ad = ad;
        return ds.set('ExperimentTest', {
            'key': params.id,
            'data': {
                'experiment_id': ds.toKey(
                    'Experiment',
                    params.experiment_id,
                    params.team_id
                ),
                'created_at': new Date(),
                'adset': ds.jsonToKey(params.adset.key),
                'ad': ds.jsonToKey(params.ad.key),
                'adcreative': ds.jsonToKey(params.adcreative.key),
                'name_text': params.name_text,
                'campaign': params.campaign.key,
                'page': params.page,
                'audience_id': params.audience_id,
                'adaccount': params.adaccount,
                'budget': params.budget,
                'end_time': new Date(params.end_time * 1000),
                'start_time': new Date(params.start_time * 1000),
                'creative': {
                    'description': params.description,
                    'name': params.name,
                    'message': params.message,
                    'image': params.image
                },
                'utm': params.utm,
                'active': true,
                'click': 0
            }
        }, params.team_id);
    });
};
