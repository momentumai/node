var catUtils = require('@lib/utils/category'),
    ds = require('@lib/resources/ds'),
    listFormat = require('@lib/model/experiment/listFormat');

function parseParams (p) {
    var params = {};

    params.team_id = p.team_id || 0;
    params.cats = p.cats;

    params.limit = Number(p.limit) || 10;
    params.offset = p.offset || '';

    catUtils.extend(params.cats);

    return params;
}

module.exports = function (params, token) {
    var resp = {};

    params = parseParams(params);

    return ds.query('Experiment', function (query) {
        if (params.cats[0] && params.cats[0] !== 'NONE') {
            query.filter('cat1', params.cats[0]);
            if (params.cats[1] && params.cats[1] !== 'NONE') {
                query.filter('cat2', params.cats[1]);
                if (params.cats[2] && params.cats[2] !== 'NONE') {
                    query.filter('cat3', params.cats[2]);
                }
            }
        }
        query.order('updated_at', {'descending': true});
        query.limit(params.limit);
        if (params.offset) {
            query.start(params.offset);
        }
        return query;
    }, params.team_id).then(function (result) {
        if (result.nextQuery && result.nextQuery.moreResults) {
            if (result.nextQuery.moreResults !== 'NO_MORE_RESULTS') {
                resp.offset = result.nextQuery.endCursor;
            }
        }

        return result.data;
    }).then(function (items) {
        return listFormat(params, items, token);
    }).then(function (result) {
        resp.data = result;
        return resp;
    });
};
