var typeMap = {
    'string': 'S',
    'number': 'N',
    'S': String,
    'N': Number
};

function toAWS (obj) {
    var ret = {},
        key,
        type;

    for (key in obj) {
        if (obj.hasOwnProperty(key) && obj[key] && obj[key] !== 0) {
            type = typeof obj[key];
            if (typeMap[type]) {
                ret[key] = {};
                ret[key][typeMap[type]] = String(obj[key]);
            } else {
                ret[key] = {};
                ret[key]['M'] = toAWS(obj[key]);
            }
        }
    }

    return ret;
}

function toObject (obj) {
    var ret = {},
        item = obj.Item,
        key,
        keys;

    for (key in item) {
        if (item.hasOwnProperty(key) &&
            item[key] &&
            Object.keys(item[key]).length === 1
        ) {
            keys = Object.keys(item[key]);
            if (typeMap[keys[0]]) {
                ret[key] = typeMap[keys[0]](item[key][keys[0]]);
            } else {
                ret[key] = toObject({'Item': item[key][keys[0]]});
            }
        }
    }

    return ret;
}

function arrayToObjectArray (array) {
    var ret = [],
        i,
        n;

    for (i = 0, n = array.length; i < n; i += 1) {
        ret.push(toObject({'Item': array[i]}));
    }

    return ret;
}

function getTable (config, name) {
    return [config.dynamodb.prefix, name].join('-');
}

function cleanId (obj) {
    obj['id'] = obj['id'].substring(obj['id'].indexOf('_') + 1);
    return obj;
}

module.exports = {
    'toObject': toObject,
    'toAWS': toAWS,
    'arrayToObjectArray': arrayToObjectArray,
    'getTable': getTable,
    'cleanId': cleanId
};
