var Promise = require('bluebird'),
    AWS = require('aws-sdk'),
    config = require('@config'),
    logger = require('@lib/logger')('s3'),
    timeUtils = require('@lib/utils/time'),
    uuid = require('@lib/utils/uuid'),
    s3 = {};

s3.init = function () {
    return Promise.resolve(new AWS.S3(config.AWS));
};

s3.pushObject = function (object, key, bucket, s3) {
    return new Promise(function (resolve, reject) {
        s3.upload({
            'Bucket': [
                config.s3.prefix,
                bucket
            ].join('-'),
            'Key': key,
            'Body': JSON.stringify(object)
        }, function (err) {
            if (err) {
                return reject(err);
            }
            return resolve();
        });
    });
};

s3.pushError = function (params, config, s3) {
    logger.error(params);

    return new Promise(function (resolve, reject) {
        s3.upload({
            'Bucket': [
                config.s3.prefix,
                'error'
            ].join('-'),
            'Key': [
                timeUtils.dateFormat(Date.now(), '/', 1),
                [Date.now(), uuid.next()].join('-')
            ].join('/'),
            'Body': JSON.stringify(params)
        }, function (err) {
            if (err) {
                reject(err);
            }
            return resolve();
        });
    });
};

module.exports = s3;
