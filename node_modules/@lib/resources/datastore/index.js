var config = require('@config'),
    gcloud = require('gcloud'),
    Promise = require('bluebird'),
    ds = {};

function getDataStore (namespace) {
    var cfg = {
        'projectId': config.google.projectId,
        'credentials': config.google.credentials
    };

    if (namespace) {
        cfg.namespace = String(namespace);
    }

    return gcloud.datastore(cfg);
}

ds.init = function (namespace) {
    return Promise.resolve(getDataStore(namespace));
};

ds.get = function (namespace, kind, key) {
    var datastore = getDataStore(namespace);

    return new Promise(function (resolve, reject) {
        datastore.get(
            datastore.key([String(kind), String(key)]
        ), function (err, resp) {
            if (err) {
                return reject(err);
            }

            return resolve(resp && resp.data || null);
        });
    });
};

ds.set = function (namespace, kind, key, data) {
    var datastore = getDataStore(namespace);

    return new Promise(function (resolve, reject) {
        datastore.save({
            'key': datastore.key([String(kind), String(key)]),
            'data': data
        }, function (err) {
            if (err) {
                return reject(err);
            }
            return resolve();
        });
    });
};

ds.runQuery = function (query, datastore) {
    return new Promise(function (resolve, reject) {
        datastore.runQuery(query, function (err, resp) {
            if (err) {
                return reject(err);
            }

            console.log(resp);

            return resolve(resp || null);
        });
    });
};

module.exports = ds;
