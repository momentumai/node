var config = require('@config'),
    Memcached = require('memcached'),
    Promise = require('bluebird'),
    resource = {};

function getKey (params) {
    return [
        String(params.team_id) || '0',
        params.type || 'default',
        params.key || ''
    ].join('_');
}

function getValue (params) {
    return JSON.stringify(params.value);
}

function getLifetime (params) {
    return parseInt(params.lifetime) || 3600;
}

resource.get = function (params, res) {
    return new Promise(function (resolve, reject) {
        res.get(getKey(params), function (err, value) {
            if (err) {
                return reject(err);
            }

            try {
                value = JSON.parse(value || '{}');
            } catch (ignore) {
                value = {};
            }

            return resolve(value);
        });
    });
};

resource.set = function (params, res) {
    return new Promise(function (resolve, reject) {
        res.set(
            getKey(params),
            getValue(params),
            getLifetime(params),
            function (err) {
                if (err) {
                    return reject(err);
                }

                return resolve();
            }
        );
    });
};

resource.init = function () {
    var addr = process.env.MEMCACHE_PORT_11211_TCP_ADDR || config.memcache.addr,
        port = process.env.MEMCACHE_PORT_11211_TCP_PORT || config.memcache.port;

    return Promise.resolve(new Memcached(addr + ':' + port));
};

module.exports = resource;
