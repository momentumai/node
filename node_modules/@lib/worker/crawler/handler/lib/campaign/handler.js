var Promise = require('bluebird'),
    request = require('request'),
    campaign = {};

function isActive (now, campaign, ad) {
    var start = new Date(ad.adset.start_time),
        end = new Date(ad.adset.end_time),
        active = campaign.effective_status === 'ACTIVE',
        adActive = ad.effective_status === 'ACTIVE';

    return active && adActive && now >= start.getTime() &&
        now < end.getTime() && 'paid' || 'team';
}

campaign.getLast100 = function (now, accessToken, accountId) {
    var url  = [
        'https://graph.facebook.com/v2.5/',
        accountId +
        '/campaigns?limit=100&fields=effective_status,start_time,stop_time,' +
        'ads.limit(100){effective_status,adcreatives.limit(100)' +
        '{object_story_id},adset{start_time,end_time}}' +
        '&access_token=',
        accessToken
    ].join('');

    return new Promise(function (resolve, reject) {
        request.get(url, function (err, ignore, body) {
            var res = {},
                dataObj = {};

            if (err) {
                return reject(err);
            }
            try {
                res = JSON.parse(body);
            } catch (e) {
                //ignore;
            }

            if (res.error) {
                return reject(res.error);
            }

            if (res.data && res.data.length) {
                res.data.forEach(function (campaign) {
                    if (
                        campaign.ads &&
                        campaign.ads.data &&
                        campaign.ads.data.length) {
                        campaign.ads.data.forEach(function (ad) {
                            if (ad.adcreatives &&
                                ad.adcreatives.data &&
                                ad.adcreatives.data.length) {
                                ad.adcreatives.data.forEach(function (adc) {
                                    if (adc.object_story_id) {
                                        if (dataObj[adc.object_story_id] !==
                                                'paid') {
                                            dataObj[adc.object_story_id] =
                                                isActive(now, campaign, ad);
                                        }
                                    }
                                });
                            }
                        });
                    }
                });
            }

            resolve(dataObj);
        });
    });
};

module.exports = campaign;
