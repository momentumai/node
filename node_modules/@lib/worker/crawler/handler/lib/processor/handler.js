var memcached = require('@lib/resources/memcached'),
    config = require('@config'),
    Promise = require('bluebird'),
    processor = {};

processor.process = function (teamId, posts) {
    return memcached.init().then(function (memc) {
        var batch = {},
            requests = [];

        Object.keys(posts).forEach(function (fullUrl) {
            var split = fullUrl.split(config.tracking.prefix),
                url = split[0].substr(0, 255),
                hash = split[1];

            batch[url] = batch[url] || {
                'hashes': {},
                'objectIds': {}
            };

            if (posts[fullUrl].state === 'paid') {
                batch[url].promoted = '1';
            }

            if (batch[url].hashes[hash] !== 'paid') {
                batch[url].hashes[hash] = posts[fullUrl].state;
            }

            batch[url].objectIds[
                posts[fullUrl].object_story_id
            ] = hash;
        });

        Object.keys(batch).forEach(function (url) {
            var req = {};

            req.id = url;
            req.hashes = batch[url].hashes;
            req.objectIds = batch[url].objectIds;

            if (batch[url].promoted) {
                req.promoted = batch[url].promoted;
            }

            requests.push(memcached.set({
                'team_id': teamId,
                'type': 'fb-url-cache',
                'key': url,
                'value': req,
                'lifetime': 86400
            }, memc));
        });

        return Promise.all(requests);
    });
};

module.exports = processor;
