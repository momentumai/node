var path = require('path'),
    sqlUtils = require('@lib/utils/sql'),
    db = require('@lib/resources/db'),
    q = sqlUtils.getQueries(path.join(__dirname, 'sql')),
    Promise = require('bluebird'),
    cpa = require(
        path.join(__dirname, '..', 'metrics', 'cpa')
    );

module.exports.handler = function (event, context) {
    var rulePromises = event.rules.reduce(function (prev, act) {
        var params = {
            'team_id': event.team_id,
            'to': event.timestamp,
            'cats': [event.cat1, event.cat2, event.cat3],
            'rule_id': act.parent
        };

        prev[act.id] = db.q(
            q['promoted'],
            params,
            context.pool
        );

        return prev;
    }, {});

    return Promise.join(
        cpa.get(
            event,
            context
        ),
        Promise.props(rulePromises),
        function (cpaList, ruleData) {
            return Object.keys(ruleData).reduce(function (prev, ruleId) {
                prev[ruleId] = ruleData[ruleId].map(function (act) {
                    var content = cpaList.filter(function (cont) {
                        return cont.content_id === act.content_id;
                    })[0] || null;

                    if (!content) {
                        return null;
                    }

                    return {
                        'id': act.content_id,
                        'cpa': content.cpa,
                        'promotion_id': act.promotion_id,
                        'campaign_id': act.campaign_id
                    };
                }).filter(function (act) {
                    return act;
                });

                return prev;
            }, {});
        }
    );
};
