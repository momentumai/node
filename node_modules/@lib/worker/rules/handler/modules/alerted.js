var path = require('path'),
    sqlUtils = require('@lib/utils/sql'),
    db = require('@lib/resources/db'),
    q = sqlUtils.getQueries(path.join(__dirname, 'sql')),
    Promise = require('bluebird'),
    toplist = require('@lib/model/toplist');

module.exports.handler = function (event, context) {
    var rulePromises = event.rules.reduce(function (prev, act) {
        var params = {
            'team_id': event.team_id,
            'to': event.timestamp,
            'rule_id': act.parent
        };

        prev[act.id] = db.q(
            q['alerted'],
            params,
            context.pool
        );

        return prev;
    }, {});

    return Promise.join(
        toplist.get(
            event.team_id,
            [event.cat1, event.cat2, event.cat3],
            event.timestamp
        ),
        Promise.props(rulePromises),
        function (tl, ruleData) {
            return Object.keys(ruleData).reduce(function (prev, ruleId) {
                prev[ruleId] = ruleData[ruleId].map(function (act) {
                    var content = tl.filter(function (cont) {
                        return cont.contentId === act.content_id;
                    })[0] || {
                        'momentum': 0
                    };

                    return {
                        'id': act.content_id,
                        'momentum': content.momentum * 100,
                        'promotion_id': act.promotion_id,
                        'campaign_id': act.campaign_id
                    };
                });
                return prev;
            }, {});
        }
    );
};
