var path = require('path'),
    sqlUtils = require('@lib/utils/sql'),
    catUtils = require('@lib/utils/category'),
    db = require('@lib/resources/db'),
    ds = require('@lib/resources/ds'),
    Facebook = require('@lib/utils/facebook'),
    q = sqlUtils.getQueries(path.join(__dirname, 'sql')),
    Promise = require('bluebird'),
    cpa = {};

function getClicks (teamId, campaignId) {
    return ds.get('HistoryCampaignModel', [teamId, campaignId].join('||'))
    .then(function (resp) {
        var data = {};

        try {
            data = JSON.parse(resp.value);
        } catch (ignore) {
            //ignore
        }

        return Number(data.share || 0);
    });
}

function getFbSpent (adsetId, token) {
    return Facebook.get([
        adsetId,
        '?fields=insights.date_preset(lifetime){spend}'
    ].join(''), token).then(function (resp) {
        var insights = resp.insights &&
            resp.insights.data &&
            resp.insights.data[0] || {};

        return Number(insights['spend']) || 0;
    }).catch(function () {
        return 0;
    });
}

function getData (teamId, row) {
    return Promise.all([
        getFbSpent(row.promotion_id, row.access_token),
        getClicks(teamId, row.campaign_id)
    ]).then(function (resp) {
        if (!resp[0] || !resp[1]) {
            return null;
        }
        row.cpa = resp[0] / resp[1];
        return row;
    });
}

cpa.get = function (event, context) {
    return db.q(q['get_campaigns'], {
        'team_id': event.team_id,
        'cats': catUtils.filterNone([event.cat1, event.cat2, event.cat3]),
        'to': event.timestamp
    }, context.pool).then(function (rows) {
        return Promise.all(
            rows.map(function (row) {
                return getData(event.team_id, row);
            })
        );
    }).then(function (data) {
        return data.filter(function (d) {
            return d;
        });
    });
};

module.exports = cpa;
