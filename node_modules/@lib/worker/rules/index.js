var path = require('path'),
    resources = require('@lib/resources'),
    sqlUtils = require('@lib/utils/sql'),
    q = sqlUtils.getQueries(path.join(__dirname, 'sql')),
    _ = require('lodash'),
    db = require('@lib/resources/db'),
    time = require('@lib/utils/time'),
    Promise = require('bluebird'),
    handler = require('./handler');

function handleRequest (event, context, logger) {
    var local = {
        'now': Math.floor(Date.now() / 1000)
    };

    return resources.get().then(function (resources) {
        local.r = resources;
        return db.q(q['rules'], {}, local.r.pool);
    }).then(function (rows) {
        var promises = [],
            elements;

        elements = _.groupBy(rows, 'team_id');

        Object.keys(elements).forEach(function (teamId) {
            promises.push(handler({
                'team_id': teamId,
                'team_name': elements[teamId]['team_name'],
                'rules': elements[teamId],
                'timestamp': time.toMinutes(5, 10, local.now)
            }, local));
        });

        return Promise.all(promises);
    }).catch(function (err) {
        local.err = err;
        logger.error(err);
    }).finally(function () {
        return resources.dispose(local.r).then(function () {
            if (local.err) {
                return context.fail(local.err);
            }
            return context.succeed(local.res);
        });
    });
}

module.exports = handleRequest;
