var path = require('path'),
    fs = require('fs');

module.exports.getQueries = function (basePath) {
    var q = {};

    fs.readdirSync(basePath).forEach(function (act) {
        q[act.replace('.sql', '')] = fs.readFileSync(
            path.join(basePath, act)
        ).toString();
    });
    return q;
};

module.exports.notIn = function (ids) {
    var args = [];

    ids = ids || [];
    ids.forEach(function (id) {
        var curr = Number(id);

        if (curr > 0) {
            args.push(curr);
        }
    });

    if (!args.length) {
        args.push(0);
    }

    return 'NOT IN (' + args.join(', ') + ')';
};

module.exports.in = function (ids) {
    var args = [];

    ids = ids || [];
    ids.forEach(function (id) {
        var curr = Number(id);

        if (curr > 0) {
            args.push(curr);
        }
    });

    if (!args.length) {
        args.push(0);
    }

    return 'IN (' + args.join(', ') + ')';
};

module.exports.filterBy = function (from, what, fromOn, whatOn, filter, ids) {
    var joins = [],
        numberId;

    if (!ids || !ids.length) {
        return '';
    }

    ids.forEach(function (id, index) {
        numberId = Number(id);
        if (Math.abs(numberId) > 0) {
            joins.push([
                'RIGHT JOIN ',
                what, ' as t', index,
                ' ON t', index, '.', whatOn, ' = ', from, '.', fromOn,
                ' AND t', index, '.', filter, ' = ', id
            ].join(''));
        }
    });

    return joins.join('\n');
};

module.exports.filterByIn = function (filters) {
    var ret = [];

    filters.forEach(function (filter) {
        if (filter) {
            ret.push(filter);
        }
    });

    return ret;
};
